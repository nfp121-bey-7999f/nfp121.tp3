#BlueJ class context
comment0.params=taille
comment0.target=Pile2(int)
comment0.text=\r\n\ Creation\ d'une\ pile.\r\n\ \r\n\ @param\ taille\r\n\ la\ taille\ de\ la\ pile,\ la\ taille\ doit\ etre\ >\ 0\ .\r\n
comment1.params=
comment1.target=Pile2()
comment10.params=
comment10.target=int\ taille()
comment10.text=\r\n\ Retourne\ le\ nombre\ d'element\ d'une\ pile.\r\n\ \r\n\ @return\ le\ nombre\ d'element\r\n
comment11.params=
comment11.target=int\ capacite()
comment11.text=\r\n\ Retourne\ la\ capacite\ de\ cette\ pile.\r\n\ \r\n\ @return\ le\ nombre\ d'element\r\n
comment2.params=o
comment2.target=void\ empiler(java.lang.Object)
comment3.params=
comment3.target=java.lang.Object\ depiler()
comment4.params=
comment4.target=java.lang.Object\ sommet()
comment5.params=
comment5.target=boolean\ estVide()
comment5.text=\r\n\ Effectue\ un\ test\ de\ l'etat\ de\ la\ pile.\r\n\ \r\n\ @return\ vrai\ si\ la\ pile\ est\ vide,\ faux\ autrement\r\n
comment6.params=
comment6.target=boolean\ estPleine()
comment6.text=\r\n\ Effectue\ un\ test\ de\ l'etat\ de\ la\ pile.\r\n\ \r\n\ @return\ vrai\ si\ la\ pile\ est\ pleine,\ faux\ autrement\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Retourne\ une\ representation\ en\ String\ d'une\ pile,\ contenant\ la\r\n\ representation\ en\ String\ de\ chaque\ element.\r\n\ \r\n\ @return\ une\ representation\ en\ String\ d'une\ pile\r\n
comment8.params=o
comment8.target=boolean\ equals(java.lang.Object)
comment9.params=
comment9.target=int\ hashCode()
numComments=12
